# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: ["master", "dev"]
  pull_request:
    branches: ["master", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          uv run flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          uv run flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics

      - name: Type check with mypy
        run: |
          uv run mypy src

      - name: Test with pytest
        run: |
          uv run pytest --cov=src --cov-report=xml --cov-report=term --cov-report=json
          
      - name: Generate coverage badge
        run: |
          uv run coverage-badge -o coverage.svg
          
      - name: Commit coverage badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage.svg || true
          git diff --staged --quiet || git commit -m "Update coverage badge [skip ci]"
          
      - name: Push coverage badge
        if: github.ref == 'refs/heads/master'
        run: |
          git push || true
